name: Java CI with Maven and Docker

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: |
        mvn clean install -f myapp/pom.xml
        ls -l myapp/target

    - name: Extract current version
      id: extract-version
      run: |
        VERSION=$(mvn -f myapp/pom.xml help:evaluate -Dexpression=project.version -q -DforceStdout)
        echo "current_version=$VERSION" >> $GITHUB_ENV

    - name: Update version (increment patch)
      id: update-version
      run: |
        # Split the version into x, y, z
        VERSION_PARTS=(${GITHUB_ENV[current_version]//./ })
        MAJOR=${VERSION_PARTS[0]}
        MINOR=${VERSION_PARTS[1]}
        PATCH=${VERSION_PARTS[2]}

        # Increment the patch version
        PATCH=$((PATCH+1))

        # Create the new version string
        NEW_VERSION="${MAJOR}.${MINOR}.${PATCH}"
        echo "new_version=$NEW_VERSION" >> $GITHUB_ENV
        
        # Ensure version is valid (no double dots, e.g., ..1)
        if [[ ! "$NEW_VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "Invalid version format: $NEW_VERSION"
          exit 1
        fi
        
        # Update pom.xml with the new version
        mvn versions:set -DnewVersion=$NEW_VERSION -f myapp/pom.xml
        mvn clean install -f myapp/pom.xml

    - name: Build Docker Image
      run: |
        echo "Building Docker image with version ${{ env.new_version }}"
        docker build -t matan2024/myapp:${{ env.new_version }} .
        docker tag matan2024/myapp:${{ env.new_version }} matan2024/myapp:latest

    - name: Log in to Docker Hub
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Push Docker Image to Docker Hub
      run: |
        set -e
        docker push matan2024/myapp:${{ env.new_version }} || (echo "Retrying push..." && sleep 5 && docker push matan2024/myapp:${{ env.new_version }})

    - name: Install kubectl
      run: |
        sudo curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

    - name: Install Helm
      run: |
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

    - name: Deploy with Helm
      run: |
        helm upgrade --install myapp helm-chart/myapp --set image.tag=${{ env.new_version }}
