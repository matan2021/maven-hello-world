name: Java CI with Maven and Docker

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: |
        mvn clean install -f myapp/pom.xml
        ls -l myapp/target

    - name: Extract current version
      id: extract-version
      run: |
        VERSION=$(mvn -f myapp/pom.xml help:evaluate -Dexpression=project.version -q -DforceStdout)
        echo "version=$VERSION" >> $GITHUB_ENV

    - name: Build Docker Image
      run: |
        echo "Building Docker image with version ${{ env.version }}"
        docker build -t matan2024/myapp:${{ env.version }} .
        docker tag matan2024/myapp:${{ env.version }} matan2024/myapp:latest

    - name: Log in to Docker Hub
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Push Docker Image to Docker Hub
      run: |
        set -e
        docker push matan2024/myapp:${{ env.version }} || (echo "Retrying push..." && sleep 5 && docker push matan2024/myapp:${{ env.version }})

    - name: Run Docker Container Locally
      run: |
        docker run -d --name myapp-container -p 8080:8080 matan2024/myapp:${{ env.version }}
        sleep 10
        curl -f http://localhost:8080 || (echo "App did not start successfully" && exit 1)    

    # - name: Install kubectl
    #   run: |
    #     sudo curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    #     sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

    # - name: Install Helm
    #   run: |
    #     curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

    # - name: Deploy with Helm
    #   run: |
    #     helm upgrade --install myapp helm-chart/myapp --set image.tag=${{ env.new_version }}
    

